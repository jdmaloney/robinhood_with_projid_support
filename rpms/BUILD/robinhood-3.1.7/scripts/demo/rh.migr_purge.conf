General {
	fs_path = "/mnt/lustre";
}

db_update_policy
{
	md_update   = on_event_periodic(1sec,1min);
	path_update = on_event_periodic(10sec,6h);
}

# ChangeLog Reader configuration
ChangeLog {
    # 1 MDT block for each MDT:
    MDT {
        mdt_name  = "MDT0000" ;
        # id returned by "lctl changelog_register" command
        reader_id = "cl1" ;
    }
    batch_ack_count = 100;
    force_polling = ON;
    polling_interval = 1s;
}

Log {
    # Log verbosity level
    #FALSE; Possible values are: CRIT, MAJOR, EVENT, VERB, DEBUG, FULL
    debug_level = EVENT;
    stats_interval = 1min ;
    # Log files
    log_file = /tmp/rh.log;
    report_file = /tmp/rh.report.log;
    alert_file = stderr;
}

ListManager {
	MySQL {
		server = "localhost";
		db = "robinhood_lustre";
		user = "robinhood";
		# password or password_file are mandatory
		password = "robinhood";
	}

	SQLite {
	        db_file = "/tmp/robinhood_sqlite_db" ;
        	retry_delay_microsec = 1000 ;
	}
}

######## Policies for this demo ###########
migration_policies
{
    policy default
    {
        # aggressive migr policy (15s after last mod)
        condition { last_mod > 15s }
	archive_id = 1;
    }
}

# aggressive migration: run every minute
migration_parameters
{
    runtime_interval = 5s;
    backup_new_files = TRUE;
    check_copy_status_on_startup = TRUE;
    check_copy_status_delay = 30min;
}

######## most basic space release policy ##########

purge_policies
{
    # aggressive purge policy (10s after last access)
    # (only if purge needed)
    policy default
    {
        condition { last_access > 10s }
    }
}

purge_parameters {
    post_purge_df_latency = 10s;
}

####### Purge trigger ########

# trigger purge on OST if its usage exceeds 85%
# check every minute
purge_trigger
{
    trigger_on         = OST_usage ;
    high_threshold_pct = 20% ;
    low_threshold_pct  = 18% ;
    check_interval     = 10s ;
}


hsm_remove_policy
{
    # set this parameter to 'TRUE' for disabling HSM object removal
    no_hsm_remove = FALSE;
    # delay before impacting object removal in HSM
    deferred_remove_delay = 1s;
}

