# -*- mode: c; c-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim:expandtab:shiftwidth=4:tabstop=4:

General {
	fs_path = "/mnt/lustre";
}

# ChangeLog Reader configuration
ChangeLog {
    # 1 MDT block for each MDT:
    MDT {
        mdt_name  = "MDT0000" ;
        # id returned by "lctl changelog_register" command
        reader_id = "@RH_CLID@" ;
    }
    force_polling = ON;
    polling_interval = 1s;
}

Log {
    # Log verbosity level
    # Possible values are: CRIT, MAJOR, EVENT, VERB, DEBUG, FULL
    debug_level = MAJOR;

    stats_interval = 1min ;

    # Log files
    log_file = stderr;
    report_file = stderr;
    alert_file = /dev/null;
}

ListManager
{
	MySQL
	{
		server = "localhost";
		db = "@RH_DB@";
		user = "robinhood";
		# password or password_file are mandatory
		password = "robinhood";
	}

	# if we want to test with SQLite DB
    	SQLite
    	{
	        db_file = "/tmp/rh.sqlite_db" ;
        	retry_delay_microsec = 1000 ;
    	}

}

######## Policies for this demo ###########

migration_policies
{
    policy default
    {
        # aggressive migr policy (2min after last mod)
        condition
        {
            last_mod > 15s
        }

	    archive_id = 1;
    }
}

# aggressive migration: run every minute
migration_parameters
{
    runtime_interval = 15s;
    backup_new_files = TRUE;
    
    check_copy_status_on_startup = TRUE;
    check_copy_status_delay = 30min;

}

######## most basic space release policy ##########

purge_policies
{
    # aggressive purge policy (30s after last access)
    policy default
    {
        condition
        {
            last_access > 10s 
        }
    }
}

purge_parameters
{
  post_purge_df_latency = 10s;
}

####### Purge trigger ########

# trigger purge on OST if its usage exceeds 85%
# check every minute
purge_trigger
{
    trigger_on         = OST_usage ;
    high_threshold_pct = 50% ;
    low_threshold_pct  = 45% ;
    check_interval     = 10s ;
}


hsm_remove_policy
{
    # set this parameter to 'TRUE' for disabling HSM object removal
    no_hsm_remove = FALSE;
    # delay before impacting object removal in HSM
    deferred_remove_delay = 1s;
}

